// Script pour g√©n√©rer favicon.ico
// Ex√©cuter avec: node generate-favicon.js

const fs = require('fs');
const path = require('path');

console.log('üé® Favicon Generator');
console.log('==================');
console.log('');
console.log('‚úÖ SVG source cr√©√©: favicon-source.svg');
console.log('');
console.log('Pour g√©n√©rer le favicon.ico, tu peux :');
console.log('');
console.log('1. üåê Utiliser un convertisseur en ligne (recommand√©):');
console.log('   ‚Ä¢ https://favicon.io/favicon-converter/');
console.log('   ‚Ä¢ https://convertico.com/');
console.log('   ‚Ä¢ https://icoconvert.com/');
console.log('');
console.log('2. üì¶ Installer Sharp pour conversion automatique:');
console.log('   npm install sharp');
console.log('   puis relancer ce script');
console.log('');

// V√©rifier si Sharp est disponible
try {
  const sharp = require('sharp');
  
  console.log('‚úÖ Sharp d√©tect√© ! G√©n√©ration automatique...');
  
  // Lire le SVG
  const svgBuffer = fs.readFileSync(path.join(__dirname, 'favicon-source.svg'));
  
  // Convertir en ICO (en fait PNG multi-tailles)
  const sizes = [16, 32, 48];
  
  Promise.all(sizes.map(size => 
    sharp(svgBuffer)
      .resize(size, size)
      .png()
      .toBuffer()
  )).then(buffers => {
    // Pour un vrai ICO, nous cr√©erons juste un PNG 32x32
    return sharp(svgBuffer)
      .resize(32, 32)
      .png()
      .toFile(path.join(__dirname, 'public', 'favicon-temp.png'));
  }).then(() => {
    console.log('‚úÖ Favicon PNG g√©n√©r√©: public/favicon-temp.png');
    console.log('üîÑ Renommer en favicon.ico ou convertir avec un outil en ligne');
  }).catch(err => {
    console.error('‚ùå Erreur:', err.message);
  });
  
} catch (err) {
  console.log('‚ÑπÔ∏è  Pour une conversion automatique, installe Sharp:');
  console.log('   npm install sharp');
}